library(randomForest)
library(caret)
library(gbm)
library(bst)
library(party)
data( readingSkills )
force(readingSkills)
force(readingSkills)
View("ReadingSkills")
data()
library(randomForest)
library(caret)
library(gbm)
library(bst)
library(party)
data( readingSkills )
x <- as.data.frame(model.matrix(age~ ., data = readingSkills[,1:3])[, -1])
View(x)
View(x)
View(readingSkills)
View(readingSkills)
set.seed(101)
randomForest(x, readingSkills$age, mtry = ncol(x))
set.seed(101)
(bag.a1 <- train(x, readingSkills$age, preProc = c('center', 'scale'),method = 'rf', trControl = trainControl(method = "cv"),
tuneGrid = expand.grid(.mtry = ncol(x))))
set.seed(101)
(ranfor.a1 <- train(x, readingSkills$age,preProc = c('center', 'scale'),method = 'rf', trControl = trainControl(method = "cv"),
tuneGrid = expand.grid(.mtry = 2:10),importance = TRUE))
varImpPlot(bag.a1$finalModel)
plot(ranfor.a1$finalModel, col = "blue",lwd = 2)
plot(bag.a1$finalModel, col = "green",lwd = 2, add = TRUE)
legend("topright", c("Bagging","RandomForrest"),col = c("green","blue"), lwd = 2)
set.seed(1)
xd <- cbind(a1 = readingSkills$age, x)
boost.a1 = gbm(a1 ~ ., data = xd, distribution = "gaussian",n.trees = 500, interaction.depth = 3)
summary(boost.a1, plotit = FALSE)
(gbmFit.a1 <- train(a1 ~ ., data = xd,method = "gbm", trControl = trainControl(method ="cv"),
tuneGrid = expand.grid(shrinkage = c(0.1,0.05,0.02),interaction.depth = 2:5, n.trees = 50, n.minobsinnode = 10),verbose = FALSE))
(boostFit.a1 <- train(a1 ~ ., data = xd,method = 'bstTree', trControl =trainControl(method = "cv"),
preProc = c('center', 'scale')))
plot(boostFit.a1)
#str(xd)
#str(xd)
#warnings()
